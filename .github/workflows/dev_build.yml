name: dev build status

on:
  push:
    branches:
      - dev

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: runner-loudify-worker

    steps:
    - uses: actions/checkout@v2
      with:
        ref : dev

    - name: Check if venv is intact
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      run: |
        if [ ! -d "virtualenv" ]; then
              python3 -m venv virtualenv
              mkdir virtualenv/run
        fi

    - name: Use venv and install dependencies
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      run: |
        source virtualenv/bin/activate
        pip install -r requirements.txt

    - name: Build project
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: tox -e build

    - name : Build Docker image
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      run : docker build -t martynvandijke/loudify-worker .
    
    - name : Publish Docker image
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      run : docker push martynvandijke/loudify-worker 
 
    - name : Remove docker image cache
      working-directory: ${{runner.workspace}}/loudify-worker
      shell: bash
      run : docker push martynvandijke/loudify-worker 

    # - name: Remove build dir
    #   working-directory: ${{runner.workspace}}
    #   shell: bash
    #   run: |
    #     rm -rf dev
